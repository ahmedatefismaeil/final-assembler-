Rules:
1- all keywords are case insensitive
 
2- enter number of registers 2 digits EX. R02 not R2

3- registers or immediate values must be seperated by commas(,)

4- comments are made by semicolon(;)

5- only hexadecimal immediate values are allowed(for now) so number must begin with 'h' or 'H'

6- labels are made by adding colon(:) and maximum characters are 29

7- The following are the registers available
	_________________________________
	|	R00	|	R08	|
	---------------------------------
	|	R01	|	R09	|
	---------------------------------
	|	R02	|	R10	|
	---------------------------------
	|	R03	|	R11	|
	---------------------------------
	|	R04	|	R12	|
	---------------------------------
	|	R05	|	R13	|
	---------------------------------
	|	R06	|	R14	|
	---------------------------------
	|	R07	|	R15	|
	---------------------------------

8- The following are the instructions allowed and their meaning
	_________________________________________________________________________
	|	add Rxx,Ryy,Rzz		|	Rxx = Ryy + Rzz			|
	-------------------------------------------------------------------------
	|	sub Rxx,Ryy,Rzz 	|	Rxx = Ryy - Rzz			|
	-------------------------------------------------------------------------
	|	mull Rxx,Ryy,Rzz	|	Rxx = Ryy(15->0) * Rzz(15->0)	|
	-------------------------------------------------------------------------
	|	mulh Rxx,Ryy,Rzz	|	Rxx = Ryy(31->16) * Rzz(31->16) |
	-------------------------------------------------------------------------
	|	and Rxx,Ryy,Rzz		|	Rxx = Ryy & Rzz			|
	-------------------------------------------------------------------------
	|	or Rxx,Ryy,Rzz		|	Rxx = Ryy | Rzz			|
	-------------------------------------------------------------------------
	|	xor Rxx,Ryy,Rzz		|	Rxx = Ryy ^ Rzz			|
	-------------------------------------------------------------------------
	|	xnor Rxx,Ryy,Rzz	|	Rxx = Ryy ^* Rzz		|
	-------------------------------------------------------------------------
	|	addi Rxx,Ryy,IMM	|	Rxx = Ryy + IMM			|
	-------------------------------------------------------------------------
	|	subi Rxx,Ryy,IMM 	|	Rxx = Ryy - IMM			|
	-------------------------------------------------------------------------
	|	mulli Rxx,Ryy,IMM	|	Rxx = Ryy(15->0) * IMM		|
	-------------------------------------------------------------------------
	|	mulhi Rxx,Ryy,IMM	|	Rxx = Ryy(31->16) * IMM	        |
	-------------------------------------------------------------------------
	|	andi Rxx,Ryy,IMM	|	Rxx = Ryy & IMM			|
	-------------------------------------------------------------------------
	|	ori Rxx,Ryy,IMM		|	Rxx = Ryy | IMM			|
	-------------------------------------------------------------------------
	|	xori Rxx,Ryy,IMM	|	Rxx = Ryy ^ IMM			|
	-------------------------------------------------------------------------
	|	xnori Rxx,Ryy,IMM	|	Rxx = Ryy ^* IMM		|
	-------------------------------------------------------------------------
	|	store Rxx,Ryy,IMM	|	[R+IMM] = R			|
	-------------------------------------------------------------------------
	|	load Rxx,Ryy,IMM 	|	R = [R+IMM]			|
	-------------------------------------------------------------------------
	|	shl Rxx,Ryy		|	Rxx = Ryy << 1	'0'		|
	-------------------------------------------------------------------------
	|	shr Rxx,Ryy		|	Rxx = Ryy >> 1	'0'		|
	-------------------------------------------------------------------------	
	|	sar Rxx,Ryy		|	Rxx = Ryy >> 1	'Ryy(31)'	|
	-------------------------------------------------------------------------
	|	push Rxx		|	[st_ptr] = Rxx			|
	-------------------------------------------------------------------------
	|	pop Rxx			|	Rxx = [st_ptr]			|
	-------------------------------------------------------------------------
	|	be Rxx,Ryy,label	|	Rxx=Ryy: pc = pc + label	|
	-------------------------------------------------------------------------
	|	bne Rxx,Ryy,label	|	Rxx!=Ryy: pc = pc + label	|
	-------------------------------------------------------------------------
	|	bg Rxx,Ryy,label	|	Rxx>Ryy: pc = pc+label		|
	-------------------------------------------------------------------------
	|	bge Rxx,Ryy,label	|	Rxx>=Ryy: pc = pc +label	|
	-------------------------------------------------------------------------
	|	jump label		|	pc = label			|
	-------------------------------------------------------------------------
	|	call label		|	[st_ptr]=pc , pc=label		|
	-------------------------------------------------------------------------
	|	ret			|	pc=[st_ptr]			|
	-------------------------------------------------------------------------
	|	nop			|	-------------------		|
	-------------------------------------------------------------------------
	|	halt			|	pc = pc				|
	-------------------------------------------------------------------------